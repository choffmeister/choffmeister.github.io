title = "Parsing command-line arguments with C#"
publish_date = "2013-09-20"

extends ../resources/views/layout
block content
    h1 #{post.title}

    :markdown
        In the last time I often build command-line tools with C# that needed some parsing of the command-line arguments passed in. Often I just have done simple comparison of strings to detect the arguments. Since doing everything the same incomplete crap is bad, I build a simple library called DotArguments to handle that stuff. It allows defining the arguments, types etc via a simple POCO argument container class with some attributes.

        The library is heavily unit tested and rock solid. It comes with a GNU compliant parser. It can be found at [DotArguments](https://github.com/choffmeister/DotArguments) and licensed under the permissive MIT license. Feel free to use it or contribute.

        You can easily install the package via [NuGet](http://www.nuget.org/packages/DotArguments/).

        ## Example

    +gist("choffmeister", "7877701", "DemoArguments.cs")

    :markdown

        Here are some examples, how the application can be invoked and what values would be populated:

    +gist("choffmeister", "7877701", "example1")

    +gist("choffmeister", "7877701", "example2")

    +gist("choffmeister", "7877701", "example3")


    :markdown
        And now some invocation with invalid arguments:

    +gist("choffmeister", "7877701", "example4")

    +gist("choffmeister", "7877701", "example5")
